name: "Get Vesion"
description: "Get .NET project version"

inputs:
  prefix:
    description: Prefix of version tag
    required: false
    default: 'v'
  project-path:
    description: "Path of csproj file that contains version tag"
    required: true

outputs:
  version:
    description: "Project version"
    value: ${{ steps.get-version.outputs.version }}
  is-new:
    description: "if true, Project version is new version"
    value: ${{ steps.is-new-version.outputs.is-new }}
  is-prerelease:
    description: "if true, Project version is pre-release version"
    value: ${{ steps.is-new-version.outputs.is-prerelease }}

runs:
  using: composite
  steps:
    - name: Get version
      uses: kzrnm/get-net-sdk-project-versions-action@v2
      id: get-version
      with:
        proj-path: ${{ inputs.project-path }}
    - name: Check tag
      uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with:
        tag: ${{inputs.prefix}}${{ steps.get-version.outputs.version }}
    - name: is new version?
      shell: bash
      id: is-new-version
      run: |
        IS_PRE=false
        IS_NEW=false
        if [ "${{ steps.get-version.outputs.version }}" = "${GITHUB_REF#refs/tags/${{inputs.prefix}}}" ]; then
          echo "create version tag event: $GITHUB_REF"
          if [ "${{ steps.get-version.outputs.version-suffix }}" != "" ]; then
            IS_PRE=true
          fi
          IS_NEW=true
        elif [ "${{ steps.check-tag.outputs.exists }}" = "false" ]; then
          echo "new version tag project: ${{ steps.get-version.outputs.version }}"
          if [ "${{ steps.get-version.outputs.version-suffix }}" != "" ]; then
            IS_PRE=true
          fi
          IS_NEW=true
        fi
        echo "is-new=$IS_NEW" >> "$GITHUB_OUTPUT"
        echo "is-prerelease=$IS_PRE" >> "$GITHUB_OUTPUT"
