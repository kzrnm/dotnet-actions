name: Unit test

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      dotnet-version:
        required: true
        type: string
      test-logger:
        required: false
        default: ""
        type: string
      os:
        description: Running os
        required: false
        default: ubuntu-latest
        type: string
      nuget-path:
        description: path of $NUGET_PACKAGES
        required: false
        default: ""
        type: string
      use-openssl1:
        description: install openssl1.0
        type: boolean
        default: false
        required: false

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ inputs.nuget-path }}

jobs:
  unittest:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - uses: actions/cache@v4
        with:
          path: ${{ (inputs.nuget-path != '' && inputs.nuget-path ) || '~/.nuget/packages' }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build
        run: dotnet build ${{ inputs.target }}
      - name: openssl 1.0
        if: inputs.use-openssl1
        run: |
          wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5_amd64.deb
          sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5_amd64.deb
      - name: Test
        shell: bash
        run: dotnet test ${{ inputs.target }} --no-build ${{ inputs.test-logger && format('--logger {0}', inputs.test-logger) }}